{
  "info": {
    "name": "MdToWord API 完整测试集合 (Apifox专用版)",
    "description": "Spring Boot + JWT 纯认证模式 API 测试集合\n\n## 认证说明\n- 登录后会返回JWT Token\n- 后续需要认证的接口在Header中添加: Authorization: Bearer <token>\n\n## 测试顺序建议\n1. 先测试健康检查\n2. 用户注册\n3. 用户登录（获取Token）\n4. 其他需要认证的接口\n\n## 环境变量\n- {{baseUrl}}: http://localhost:8080\n- {{token}}: JWT Token（登录后自动设置）\n\n## Apifox专用优化\n- 使用Apifox兼容的JSON格式\n- 确保请求体内容正确显示",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    },
    {
      "key": "blogId",
      "value": "1",
      "type": "string"
    },
    {
      "key": "categoryId",
      "value": "1",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "🔐 认证模块 (Auth)",
      "item": [
        {
          "name": "用户注册",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"注册成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.message).to.eql('注册成功');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"123456\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          }
        },
        {
          "name": "用户登录",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"登录成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data.token).to.exist;",
                  "    ",
                  "    // 自动保存Token到环境变量",
                  "    pm.collectionVariables.set('token', jsonData.data.token);",
                  "    console.log('JWT Token已保存:', jsonData.data.token);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"123456\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          }
        }
      ]
    },
    {
      "name": "👤 用户管理模块 (User)",
      "item": [
        {
          "name": "获取当前用户信息",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"获取用户信息成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.exist;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/user/current",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user", "current"]
            }
          }
        },
        {
          "name": "更新用户信息",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"更新用户信息成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nickname\": \"测试用户\",\n  \"email\": \"test@example.com\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/user/info",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user", "info"]
            }
          }
        },
        {
          "name": "修改密码",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"修改密码成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "currentPassword",
                  "value": "123456",
                  "type": "text"
                },
                {
                  "key": "newPassword",
                  "value": "654321",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/user/change-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user", "change-password"]
            }
          }
        }
      ]
    },
    {
      "name": "📝 博客管理模块 (Blog)",
      "item": [
        {
          "name": "获取博客列表",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"获取博客列表成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.be.an('object');",
                  "    ",
                  "    // 如果有博客数据，保存第一个博客ID",
                  "    if (jsonData.data.records && jsonData.data.records.length > 0) {",
                  "        pm.collectionVariables.set('blogId', jsonData.data.records[0].id);",
                  "        console.log('博客ID已保存:', jsonData.data.records[0].id);",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/blog/list?page=1&size=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "blog", "list"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "创建博客",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"创建博客成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.message).to.eql('博客创建成功');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"测试博客标题\",\n  \"contentHtml\": \"<h1>测试博客内容</h1><p>这是一个测试博客的HTML内容。</p>\",\n  \"categoryId\": 1,\n  \"status\": \"draft\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/blog",
              "host": ["{{baseUrl}}"],
              "path": ["api", "blog"]
            }
          }
        },
        {
          "name": "获取博客详情",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"获取博客详情成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.exist;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/blog/{{blogId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "blog", "{{blogId}}"]
            }
          }
        },
        {
          "name": "更新博客",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"更新博客成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.message).to.eql('博客更新成功');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"更新后的博客标题\",\n  \"contentHtml\": \"<h1>更新后的博客内容</h1><p>这是更新后的HTML内容。</p>\",\n  \"categoryId\": 1,\n  \"status\": \"published\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/blog/{{blogId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "blog", "{{blogId}}"]
            }
          }
        },
        {
          "name": "删除博客",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"删除博客成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.message).to.eql('博客删除成功');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/blog/{{blogId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "blog", "{{blogId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "📂 分类管理模块 (Category)",
      "item": [
        {
          "name": "获取分类列表",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"获取分类列表成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "    ",
                  "    // 如果有分类数据，保存第一个分类ID",
                  "    if (jsonData.data && jsonData.data.length > 0) {",
                  "        pm.collectionVariables.set('categoryId', jsonData.data[0].id);",
                  "        console.log('分类ID已保存:', jsonData.data[0].id);",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/category/list",
              "host": ["{{baseUrl}}"],
              "path": ["api", "category", "list"]
            }
          }
        },
        {
          "name": "创建分类",
          "event": [
            {
              "listen": "pre-request",
              "script": {
                "exec": [
                  "// 如果没有分类ID，先获取分类列表",
                  "if (!pm.collectionVariables.get('categoryId')) {",
                  "    pm.sendRequest({",
                  "        url: pm.collectionVariables.get('baseUrl') + '/api/category/list',",
                  "        method: 'GET'",
                  "    }, function (err, response) {",
                  "        if (!err && response.json().success && response.json().data.length > 0) {",
                  "            pm.collectionVariables.set('categoryId', response.json().data[0].id);",
                  "        }",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"测试分类\",\n  \"description\": \"这是一个测试分类\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/category",
              "host": ["{{baseUrl}}"],
              "path": ["api", "category"]
            }
          }
        }
      ]
    },
    {
      "name": "📁 文件管理模块 (File)",
      "item": [
        {
          "name": "上传头像",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"上传头像成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.exist;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/file/upload-avatar",
              "host": ["{{baseUrl}}"],
              "path": ["api", "file", "upload-avatar"]
            }
          }
        },
        {
          "name": "富文本图片上传",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"富文本图片上传成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.location).to.exist;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/file/rte-upload",
              "host": ["{{baseUrl}}"],
              "path": ["api", "file", "rte-upload"]
            }
          }
        }
      ]
    },
    {
      "name": "🛠️ 工具模块 (Converter)",
      "item": [
        {
          "name": "健康检查",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"健康检查成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/converter/health",
              "host": ["{{baseUrl}}"],
              "path": ["api", "converter", "health"]
            }
          }
        },
        {
          "name": "Markdown转Word",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Markdown转Word成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/vnd.openxmlformats-officedocument.wordprocessingml.document');",
                  "    pm.expect(pm.response.headers.get('Content-Disposition')).to.include('attachment');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "\"# 测试Markdown文档\\n\\n这是一个**测试**文档，包含以下内容：\\n\\n## 功能列表\\n\\n1. **粗体文字**\\n2. *斜体文字*\\n3. [链接](https://example.com)\\n4. \\`代码片段\\`\\n\\n### 代码块\\n\\n\\`\\`\\`java\\npublic class Hello {\\n    public static void main(String[] args) {\\n        System.out.println(\\\"Hello World!\\\");\\n    }\\n}\\n\\`\\`\\`\\n\\n### 表格\\n\\n| 姓名 | 年龄 | 职业 |\\n|------|------|------|\\n| 张三 | 25   | 程序员 |\\n| 李四 | 30   | 设计师 |\\n\\n### 引用\\n\\n> 这是一个引用文本，用于测试Markdown转Word功能。\"",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/converter/markdown-to-word",
              "host": ["{{baseUrl}}"],
              "path": ["api", "converter", "markdown-to-word"]
            }
          }
        }
      ]
    }
  ]
}
